logging:
  level:
    root: info

server:
  port: 8080

spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:password}
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5432/airline_tickets_system}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: true
        use_sql_comments: true
  #Email configurations
  mail:
    host: smtp.gmail.com
    username: ${APP_EMAIL_USERNAME:app.under.development@gmail.com}
    password: ${APP_EMAIL_PASSWORD:ztqrbpokkijbgywb}
    port: 587
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  #RabbitMQ config
  rabbitmq:
    host: ${RABBIT_MQ_HOST:localhost}
    virtual-host: ${RABBIT_MQ_VIRTUAL_HOST:}
    port: ${RABBIT_MQ_PORT:5672}
    username: ${RABBIT_MQ_USERNAME:guest}
    password: ${RABBIT_MQ_PASSWORD:guest}

jwt:
  secret-key: 6A576E5A7234753778214125442A472D4B614E645267556B58703273357638792F423F4528482B4D6251655368566D597133743677397A24432646294A404E63
  expiration-time: 864000000

open-weather-map:
  use-mock: ${OPEN_WEATHER_MAP_USE_MOCK:true}
  x-rapidapi-key: 5203b77f0emsha535f088ddf7d79p1f4773jsn935a1e67f4fb
  x-rapidapi-host: community-open-weather-map.p.rapidapi.com
  search-weather-data-url: https://community-open-weather-map.p.rapidapi.com/find?q=%s&units=metric

job:
  clear-weather-cache:
    cron-expresion: ${CLEAR_WEATHER_CACHE_CRON_EXPRESION:0 0 */8 ? * *}     # every 8 h

# Exchange + Queue config
event:
  notification-exchange: notification.exchange
  email-queue: email.queue
  notification-email-routing-key: notification.email.routingkey
